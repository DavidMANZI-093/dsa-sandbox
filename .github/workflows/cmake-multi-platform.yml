name: CMake Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Build (${{ matrix.os }}, ${{ matrix.build_type }}, ${{ matrix.compiler }})
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release, Debug]
        include:
          - os: ubuntu-latest
            compiler: g++
            cxx_compiler: g++
          - os: windows-latest
            compiler: msvc
            cxx_compiler: cl
          - os: macos-latest
            compiler: clang
            cxx_compiler: clang++
        exclude:
          - os: windows-latest
            build_type: Debug

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install cmake

    - name: Create Build Environment
      run: |
        mkdir -p ${{ github.workspace }}/build
        cd ${{ github.workspace }}/build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..

    - name: Build
      shell: bash
      run: |
        cd ${{ github.workspace }}/build
        cmake --build . --config ${{ matrix.build_type }}

    - name: Run tests
      shell: bash
      run: |
        cd ${{ github.workspace }}/build
        ctest -C ${{ matrix.build_type }} --output-on-failure
